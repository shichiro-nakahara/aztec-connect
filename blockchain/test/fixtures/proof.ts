export const proofStr =
  '0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000001df6bde50516dd1201088fd8dda84c97eda5652428d1c7e86af529cc5e0eb8210a9e973fd9687493e1078dba1b152638eee1c33e33e893b87367281858ac34d5152175cffcb23dfbd80262802e32efe7db5fdcb91ba0a0527ab1ffb323bf3fc025812ac75dccdd2d2584b6dbefbc10525cc602af2543946184c9b65e79fd0fe11b22ef607ae08588bc83a79ffacec507347bd2dee44c846181b7051285c32c0a01ae31afaaa01cb10d3681abb2f5041c6e4d26f3f7615f8024e5808192376a3d000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000003635c9adc5dea000000000000000000000000000000000000000000000000000000000000000000000298420cfadd3949d9e782779a436a883305e535b20e73c74b0832603f956ff051b6fc8a1f2a1d10a336d41a2282d8f7190c9af53af7bfe40539afbd65800ee990ba382aa1d4163cb55f53662b4a4d167fa613ec31e91a9e4c709b205ce06d75d20eef0f293210f11bd0137509d169563020afb17fb5e7d85f0eca1161a59c67c0843e50a1bddeeb6e31e2b41049e544b31dce76df5b7680eea06f2a75c6ad15b2597a69801c9d6a29ef1497d239bfd54c86a84e936d99dd2aed3e3fcf341be5c000000000000000000000000177d87095fe9bd74b513bd460256c7c323ef7c260000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009580635d572830f67000000000000000000000000000000000000000000000004e559dcc5e8e8a148000000000000000000000000000000000000000000000004b4b1f1a886aad9c400000000000000000000000000000000000000000000000000000be93db19642000000000000000000000000000000000000000000000007a3eb6bef007b26440000000000000000000000000000000000000000000000078c6eb698c3e4cf5a000000000000000000000000000000000000000000000007dfe139d2890a0b1d00000000000000000000000000000000000000000000000000000fb2683d1022000000000000000000000000000000000000000000000005a3039271fa6bdb14000000000000000000000000000000000000000000000009e90f2103d1a3cc0b00000000000000000000000000000000000000000000000f9b517c4f5efe0e520000000000000000000000000000000000000000000000000000387cb1c986ea000000000000000000000000000000000000000000000004b297c382694e024b0000000000000000000000000000000000000000000000036ad1630755f134f10000000000000000000000000000000000000000000000026ff32812c1b2faaa0000000000000000000000000000000000000000000000000000ea81d4f73499173478316aa740382bd1f57b4031f6672fb47b8d342b03ab5858617242d14d7400900a712ab9b929244e0d597a393fda700454fb1ded0f4782416aa182bc120e2a411b3dec061fde33b9b6dc8c0fbfc10928dd0cf72bb70afa48b32eb26cfce41426d362f36903f7e9208f4e9f7cd0134449142d22cd8ab1ad82199fbeceda222e4df43396d866613a41a26ae504d574b9094c2e915fcbd91c7f3d347a97a68d0e250e214bf5fac52e730adfad960b6e10be80fab8c9474c9da90fcbc830012225ddbbadab8fcafc3418fedbabb47625a891dba4a625ca56527e0bbfe416ff050a42a62f355fc1d4df7f04bb2c115f49dd53e6fb8947e74f7f61d844395e8c4c1c6cda6b30fb1515e97da5837236483a461cbecb0b03ca2969c666a7ccbe5ea52daae00a1327447bf690fb41b597550c0d7c8b67dfad274bb2f8cf00918cf16e1a95ab5cac7f893bbf7d86e8328eb11b72143c86d4d0716cea70471cb48debdd0625362028378d47d29acd356f61d2c2ff222b6aedee408e6ec55447f7768537168740cc882b79d1ca9a143dfafd77d2e6d0c457714bacb47190f7b5c412f2452f4b9421f59d63ace2495eaf50eaacd0dd3fcb382577d157b2acfa0d72e14b7c092683e7dc3ff46693bc900f9d7eac379ed8202c80f911179d71ea5007f670812f440a6bd038267a52a544f29d248a1a3daefe9823340478652b5913f2b3926d0dac3889b315d4a1b7281914e22be294a95e38c63411986c469fba6f4410cba60f86a3bb09a826d602639326419deebdea0f0f5a58d8568aa8b35ae778208f492d867e1792227cbb5175111680404b4ff9ed8f4505274413d0fc77027913c54e192a3ce095fcd526cbdf90c87324a5d21d474ac8e5899c8b15171ad37cd1e9e90f0a5e716d280807a7d18a38f5dec7ec04c11fb6fea13749278422d7113526d51ba4c527ba74346d0b46a4bffc1dd4435d6c27b0bb340f8c5aeed4deff34c9330007a1be8ecebc2eaff1f8727f697a909cd44e95dd1a0fac020fceaada1ba9c304b60f4b0d00919f6d168b6a7507125c1b7c6f7c2391580ebcfd34504c3f567a2b91fe1ed09e0eafe2c5523ffce72014139be117e227d6443bca4b806f2d60600c96f9c26b596c8fef38f027c39b085182379dba2564a48c20a3cae22b86ff843043d143f4258d3b93a685b9a9dc5adc51fddceabbecc6d7bbe3f50f3a5bacd20540eafa521f497c7ed7b31652e3df76efe2eb1b4dc99312d696ef9ab77263b91a31e642822caceadb213698200d2a8e7c8c94d74c3358e0f1b1b77a6513181d10bce3699387f98e2bc081e22935472f191d29a99428501cb6e330439786693a21ccc49aec3748d51c99bf5bffc7b2574b4c3a63d0b24c24be5ef0f92dcf65f2241c4e42daf1182189acb3c1524838854f03a943eb74d3108e521e96238cb87c1b5a0548d2f393b84d198d905fcb08d05b849e62d15fd5d0077732011773455908ed085b17432ba0ba86a631e2922a0fedbed94d5285c38714371d0c432f9b761585e76d64f756fe07b8e177e8d22b2a9a49314efa4d748c71569c27a3643ea105bd9a04cade104ecafa4e10b597a4f1b8d88979e812321e3fed38fc6a32c75326d4f9a509a3cbb86269812f7a016014d794a9c4a0252c257550dff76bff434f1610a570d94354d59a7bd7d828f410aa4421fe71adc6b1915bf8e26837e1df5c';
export const proof = Buffer.from(proofStr.slice(2), 'hex');
