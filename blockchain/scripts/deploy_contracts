#!/bin/bash
set -e

# We have to consider public and private ethereum hosts. The deployment system does not have access to the
# nodes we run in the private subnets of the VPC. One option is to expose our OpenEthereum nodes externally but that
# probably isn't wise, so we will just use Infura to deploy, but tell upstream systems to use the private node.
# Our mainnet fork, *does* need to be exposed publically, as it's the only node in the network.
case $VERSION_TAG in
  testnet)
    NETWORK=mainnet-fork
    VERIFICATION_KEY=MockVerificationKey
    export TF_VAR_PUBLIC_ETHEREUM_HOST=https://mainnet-fork.aztec.network:8545
    export TF_VAR_PRIVATE_ETHEREUM_HOST=https://mainnet-fork.aztec.network:8545
    ;;
  dev)
    NETWORK=mainnet-fork
    VERIFICATION_KEY=MockVerificationKey
    export TF_VAR_PUBLIC_ETHEREUM_HOST=https://mainnet-fork.aztec.network:8545
    export TF_VAR_PRIVATE_ETHEREUM_HOST=https://mainnet-fork.aztec.network:8545
    ;;
  *)
    echo "No configuration for VERSION_TAG=$VERSION_TAG, skipping contract deployment."
    exit 0
    ;;
esac

# Get remaining prexisting terraform state variables.
cd $TF_DIR
ensure_terraform
export TF_IN_AUTOMATION=1
terraform init -input=false -backend-config="key=$DEPLOY_TAG/blockchain"
export TF_VAR_ETHEREUM_NETWORK=$(terraform output ethereum_network || echo "")
export TF_VAR_FEE_DISTRIBUTOR_ADDRESS=$(terraform output fee_distributor_address || echo "")
export TF_VAR_ROLLUP_CONTRACT_ADDRESS=$(terraform output rollup_contract_address || echo "")
export TF_VAR_PRICE_FEED_CONTRACT_ADDRESSES=$(terraform output price_feed_contract_addresses || echo "")
export TF_VAR_PERMIT_HELPER_CONTRACT_ADDRESS=$(terraform output permit_helper_contract_address || echo "")
export TF_VAR_FAUCET_CONTRACT_ADDRESS=$(terraform output faucet_contract_address || echo "")
cd ../..

LAST_COMMIT=$(last_successful_commit blockchain $DEPLOY_TAG-deployed)

if [ -z "$LAST_COMMIT" ]; then
  echo "No successful last deploy found. Change .redeploy to manually trigger a deployment."
else
  if changed $LAST_COMMIT '.*\.sol$'; then
    echo "Solidity changed."
    REDEPLOY=1
  fi

  if changed $LAST_COMMIT '.*src/deploy/.*$'; then
    echo "Deployment scripts changed."
    REDEPLOY=1
  fi

  if changed $LAST_COMMIT 'blockchain/.redeploy'; then
    echo "Force deploy requested."
    REDEPLOY=1
  fi

  if [ "$NETWORK" != "$TF_VAR_ETHEREUM_NETWORK" ]; then
    echo "Network changed."
    export TF_VAR_ETHEREUM_NETWORK=$NETWORK
    REDEPLOY=1
  fi
fi

if [ -n "$REDEPLOY" ]; then
  echo "Redeploying contracts..."
  `docker run -e ETHEREUM_HOST=$TF_VAR_PUBLIC_ETHEREUM_HOST -e PRIVATE_KEY=$TF_VAR_PRIVATE_KEY -e VK=$VERIFICATION_KEY -e FAUCET_OPERATOR=$TF_VAR_FAUCET_OPERATOR_ADDRESS 278380418400.dkr.ecr.eu-west-2.amazonaws.com/blockchain:$COMMIT_HASH`
  if [ "$NETWORK" = "goerli" ]; then
    docker run -e ETHERSCAN_API_KEY=$ETHERSCAN_API_KEY 278380418400.dkr.ecr.eu-west-2.amazonaws.com/blockchain:$COMMIT_HASH yarn verify:goerli $ROLLUP_CONTRACT_ADDRESS || true
  fi
fi

deploy_terraform blockchain

tag_remote_image blockchain cache-$COMMIT_HASH cache-$COMMIT_HASH-$DEPLOY_TAG-deployed