uint32 k = [
    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

uint32 round_values =
    [ 0x01020304, 0x0a0b0c0d, 0x1a2b3e4d, 0x03951bd3, 0x0e0fa3fe, 0x01000000, 0x0f0eeea1, 0x12345678 ];

uint32[8] sha256(uint32[64] input)
{
    uint32 a = round_values[0];
    uint32 b = round_values[1];
    uint32 c = round_values[2];
    uint32 d = round_values[3];
    uint32 e = round_values[4];
    uint32 f = round_values[5];
    uint32 g = round_values[6];
    uint32 h = round_values[7];
    for (i in 0..64) {
        uint32 S1 = e >>> 7 ^ e >>> 11 ^ e >>> 25;
        uint32 ch = (e & f) + ((~e) & g);
        uint32 temp1 = h + S1 + ch + k[i % 64] + input[i];

        uint32 S0 = a >>> 2 ^ a >>> 13 ^ a >>> 22;
        uint32 T0 = (b & c);
        uint32 T1 = (b - T0) + (c - T0);
        uint32 T2 = a & T1;
        uint32 maj = T2 + T0;
        uint32 temp2 = S0 + maj;

        h = g;
        g = f;
        f = e;
        e = d + temp1;
        d = c;
        c = b;
        b = a;
        a = temp1 + temp2;
    }
    return [ a, b, c, d, e, f, g, h ];
}

// native types
// uint2-64 granularity 1
// int2-64
// bool
// field
// point + *
// fixed size arrays e.g. uint2[1024];
// map

// builtins
// mimc()
// pederson()

// containers (in dsl)
// stack?

// map<uint32> mymap;
// for (i = 0; i = 64; ++i) {
//}
// field foo = 883737;
// mymap[i] = foo;
//}
