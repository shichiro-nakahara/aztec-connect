import { BarretenbergWasm } from '../../wasm';

export class Grumpkin {
  constructor(private wasm: BarretenbergWasm) {}

  // prettier-ignore
  static one = Buffer.from([
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xcf, 0x13, 0x5e, 0x75, 0x06, 0xa4, 0x5d, 0x63,
    0x2d, 0x27, 0x0d, 0x45, 0xf1, 0x18, 0x12, 0x94, 0x83, 0x3f, 0xc4, 0x8d, 0x82, 0x3f, 0x27, 0x2c,
  ]);

  public mul(point: Uint8Array, scalar: Uint8Array) {
    this.wasm.transferToHeap(point, 0);
    this.wasm.transferToHeap(scalar, 64);
    this.wasm.call('ecc_grumpkin__mul', 0, 64, 96);
    return Buffer.from(this.wasm.sliceMemory(96, 160));
  }
}
